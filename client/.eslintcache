[{"/home/kotoslav/projects/grob43/client/src/index.js":"1","/home/kotoslav/projects/grob43/client/src/App.js":"2","/home/kotoslav/projects/grob43/client/src/components/AppRouter.js":"3","/home/kotoslav/projects/grob43/client/src/routes.js":"4","/home/kotoslav/projects/grob43/client/src/http/index.js":"5","/home/kotoslav/projects/grob43/client/src/utils/consts.js":"6","/home/kotoslav/projects/grob43/client/src/pages/Shop.js":"7","/home/kotoslav/projects/grob43/client/src/store/ItemStore.js":"8","/home/kotoslav/projects/grob43/client/src/http/itemAPI.js":"9","/home/kotoslav/projects/grob43/client/src/components/NavBar.js":"10","/home/kotoslav/projects/grob43/client/src/pages/Contacts.js":"11","/home/kotoslav/projects/grob43/client/src/pages/Catalog.js":"12","/home/kotoslav/projects/grob43/client/src/components/CatalogCardsOnMainPage.js":"13","/home/kotoslav/projects/grob43/client/src/utils/scrollUp.js":"14","/home/kotoslav/projects/grob43/client/src/components/CategoryCards.js":"15","/home/kotoslav/projects/grob43/client/src/components/ItemList.js":"16","/home/kotoslav/projects/grob43/client/src/components/modals/ItemBrowse.js":"17","/home/kotoslav/projects/grob43/client/src/components/useScrollLock.js":"18"},{"size":345,"mtime":1697881500882,"results":"19","hashOfConfig":"20"},{"size":286,"mtime":1697376258176,"results":"21","hashOfConfig":"20"},{"size":516,"mtime":1697896684795,"results":"22","hashOfConfig":"20"},{"size":423,"mtime":1697384806788,"results":"23","hashOfConfig":"20"},{"size":119,"mtime":1697881359488,"results":"24","hashOfConfig":"20"},{"size":112,"mtime":1697384780104,"results":"25","hashOfConfig":"20"},{"size":2140,"mtime":1697910405489,"results":"26","hashOfConfig":"20"},{"size":897,"mtime":1697814211089,"results":"27","hashOfConfig":"20"},{"size":392,"mtime":1697904304075,"results":"28","hashOfConfig":"20"},{"size":1787,"mtime":1697910963437,"results":"29","hashOfConfig":"20"},{"size":2340,"mtime":1697908470203,"results":"30","hashOfConfig":"20"},{"size":5060,"mtime":1697995493575,"results":"31","hashOfConfig":"20"},{"size":1519,"mtime":1697955668189,"results":"32","hashOfConfig":"20"},{"size":232,"mtime":1697891172069,"results":"33","hashOfConfig":"20"},{"size":1615,"mtime":1697955749788,"results":"34","hashOfConfig":"20"},{"size":2202,"mtime":1697997027362,"results":"35","hashOfConfig":"20"},{"size":9762,"mtime":1697987705777,"results":"36","hashOfConfig":"20"},{"size":318,"mtime":1697986219961,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5rvmqv",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/kotoslav/projects/grob43/client/src/index.js",[],["77","78"],"/home/kotoslav/projects/grob43/client/src/App.js",[],"/home/kotoslav/projects/grob43/client/src/components/AppRouter.js",[],"/home/kotoslav/projects/grob43/client/src/routes.js",[],"/home/kotoslav/projects/grob43/client/src/http/index.js",[],"/home/kotoslav/projects/grob43/client/src/utils/consts.js",[],"/home/kotoslav/projects/grob43/client/src/pages/Shop.js",["79"],"import React, { useContext, useEffect } from 'react';\nimport CatalogCardsOnMainPage from '../components/CatalogCardsOnMainPage';\nimport { readAllCategory } from '../http/itemAPI';\nimport { Context } from '../index';\nimport { observer } from 'mobx-react-lite';\nimport NavBar from '../components/NavBar';\n\n\nconst Shop = observer(() => {\n\tconst { item } = useContext(Context);\n\n\tuseEffect(() => {\n\t\treadAllCategory().then(\n\t\t\tdata => {\n\t\t\t\titem.setCategories(data);\n\t\t\t}\n\t\t);\n\t}, [])\n\n\n\treturn (\n\t\t<div>\n\t\t\t<header className=\"header\">\n\t\t\t\t<div className=\"header__bg\">\n\t\t\t\t\t<img src=\"/img/header/bg-header.jpg\" alt=\"Фон\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<NavBar/>\n\t\t\t\t\t<div className=\"header__content\">\n\t\t\t\t\t\t<div className=\"home-content\">\n\t\t\t\t\t\t\t<div className=\"home-content__block\">\n\t\t\t\t\t\t\t\t<div className=\"home-content__column\">\n\t\t\t\t\t\t\t\t\t<div className=\"home-content__subtitle\">\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"home-content__subtitle-text\">Индивидуальный заказ <br />в минимальные сроки</h2>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"home-content__title\">\n\t\t\t\t\t\t\t\t\t\t<h1>Производство ритуальных товаров</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h3 className=\"home-content__subtitle-title\">В кировской области</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"home-content__button\">\n\t\t\t\t\t\t\t\t\t<a className=\"button\" href=\"/contacts.html\"><h5 className=\"button-text\">Схема проезда</h5><svg className=\"button-right\" width=\"12\" height=\"22\" viewBox=\"0 0 12 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t\t\t\t<path className=\"button-right\" d=\"M1 21L11 11L1 1\" stroke=\"#FAF8F1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n\t\t\t\t\t\t\t\t\t</svg></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<section className=\"menu-icon\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"menu-icon__title\">\n\t\t\t\t\t\t\t<h2 className=\"title\">\n\t\t\t\t\t\t\t\tКаталог товаров\n\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<CatalogCardsOnMainPage />\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t</div>\n\t);\n});\n\nexport default Shop;\n","/home/kotoslav/projects/grob43/client/src/store/ItemStore.js",[],"/home/kotoslav/projects/grob43/client/src/http/itemAPI.js",[],"/home/kotoslav/projects/grob43/client/src/components/NavBar.js",[],"/home/kotoslav/projects/grob43/client/src/pages/Contacts.js",[],"/home/kotoslav/projects/grob43/client/src/pages/Catalog.js",["80","81"],"/home/kotoslav/projects/grob43/client/src/components/CatalogCardsOnMainPage.js",[],"/home/kotoslav/projects/grob43/client/src/utils/scrollUp.js",[],"/home/kotoslav/projects/grob43/client/src/components/CategoryCards.js",[],"/home/kotoslav/projects/grob43/client/src/components/ItemList.js",["82","83","84","85"],"/home/kotoslav/projects/grob43/client/src/components/modals/ItemBrowse.js",["86","87","88","89","90","91","92","93"],"import React, { useRef, useState, useEffect } from 'react';\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Controller, FreeMode, Thumbs } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport 'swiper/swiper.css';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { useScrollLock } from '../useScrollLock';\n\nSwiperCore.use([Controller]);\n\n\nconst ItemBrowse = ({ modalItem, modalShow, setModalShow }) => {\n    const swiperRefControl = useRef(null);\n    const swiperRef = useRef(null);\n    const thumbnailRef = useRef(null);\n    const [lightBoxOpen, setLightBoxOpen] = useState(false);\n    const [lightBoxSrc, setLightBoxSrc] = useState(null);\n    const {lockScroll, unlockScroll} = useScrollLock();\n\n\n    useEffect(() => {\n      const gallerySwiper = swiperRef.current.swiper;\n      const thumbnailSwiper = thumbnailRef.current.swiper;\n      if (gallerySwiper.controller && thumbnailSwiper.controller\n      ) {\n        gallerySwiper.controller.control = thumbnailSwiper;\n        thumbnailSwiper.controller.control = gallerySwiper;\n      }\n    }, []);\n\n    return (\n        <div\n            className={`modal-card ${modalShow ? 'open' : ''}`}\n            onClick={() =>\n                {\n                        if (!lightBoxOpen){\n                            setModalShow(false);\n                            unlockScroll()}\n                        }\n            }\n            id=\"modal-product\"\n        >\n            <div className=\"modal-card__box\" onClick={(e) => e.stopPropagation()}>\n                <button className=\"modal-card__close-btn\" id=\"close-modal-product-btn\" onClick={\n                    () => {setModalShow(false); unlockScroll()}\n                }>\n                    <svg className=\"modal-card__svg\" width=\"31\" height=\"31\" viewBox=\"0 0 31 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path className=\"modal-card__svg\" d=\"M29.5 2L2 29.5\" stroke=\"black\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                        <path className=\"modal-card__svg\" d=\"M2 2L29.5 29.5\" stroke=\"black\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    </svg>\n                </button>\n                <div className=\"modal-card__content\">\n                    <div className=\"modal-card__carousel carousel-card\">\n                        <div className=\"carousel-card__block\">\n                            <div className=\"carousel-card__images\" style={{ position: \"relative\" }}>\n                                <div className=\"carousel-card__top top-img\">\n                                    <Swiper\n                                        style={{ height: '100%' }}\n                                        slidesPerView={1}\n\n                                        onSwiper={(swiper) => {\n                                            swiperRefControl.current = swiper;\n                                        }}\n\n                                        ref={swiperRef}\n\n                                        //controller={{ control: secondSwiper }}\n                                    >\n                                        <div className=\"top-img__image\">\n\n                                            {\n                                                modalItem.gallery.map(img =>\n                                                    <SwiperSlide key={img} >\n                                                        <div className={'top-img__image'}>\n                                                            <img src={process.env.REACT_APP_API_URL + img}\n                                                                className={'top-img__img'}\n                                                                onClick={() => {\n                                                                    setLightBoxSrc(process.env.REACT_APP_API_URL + img);\n                                                                    setLightBoxOpen(true);\n                                                                    lockScroll();\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    </SwiperSlide>\n\n                                                )\n                                            }\n\n                                        </div>\n\n\n                                    </Swiper>\n\n                                    {modalItem.gallery.length>1 ?\n                                        <>\n                                        <button className=\"top-img__btn-right\"\n                                        onClick={() => swiperRefControl.current.slideNext()}\n\n                                    ><svg className=\"top-img__btn\" width=\"23\" height=\"42\" viewBox=\"0 0 23 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path className=\"top-img__btn\" d=\"M1.99999 40L21 21L2 2\" stroke=\"#231C1B\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                        </svg>\n                                    </button>\n\n                                    <button className=\"top-img__btn-left\"\n                                        onClick={() => swiperRefControl.current.slidePrev()}\n                                    ><svg className=\"top-img__btn\" width=\"23\" height=\"42\" viewBox=\"0 0 23 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path className=\"top-img__btn\" d=\"M21 2L2 21L21 40\" stroke=\"#231C1B\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                        </svg>\n                                    </button>\n                                        </>\n                                        :\n                                        \"\"\n                                    }\n\n\n                                </div>\n\n                                <div className=\"carousel-card__bottom bottom-img\">\n\n                                    <Swiper\n                                        slidesPerView={'auto'}\n                                        spaceBetween={10}\n                                        centeredSlides={true}\n                                        slideToClickedSlide={true}\n                                        slidesPerView={ modalItem.gallery.length >= 3 ? 3 : 2}\n                                        ref={thumbnailRef}\n                                    >\n\n                                        { modalItem.gallery.length>1 && modalItem.gallery.map(img =>\n                                            <SwiperSlide key={img}>\n                                                <div className={\"bottom-img__bg\"} >\n                                                    <img className=\"bottom-img__image\" src={process.env.REACT_APP_API_URL + img} alt=\"Фотография товара\" />\n                                                </div>\n                                            </SwiperSlide>\n                                        )}\n\n\n                                    </Swiper>\n\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                    <article className=\"modal-card__item item-card\">\n                        <div className=\"item-card__block\">\n                            <div className=\"item-card__body\">\n                                <div className=\"item-card__title title-card\">\n                                    <h3 className=\"title-card__title\">{modalItem.name}</h3>\n                                    <h5 className=\"title-card__article\">Артикул: {modalItem.article}</h5>\n                                </div>\n                                <div className=\"item-card__description description-card\">\n                                    <div className=\"description-card__title\">\n                                        <h6 className=\"description-card__title-text\">Описание товара</h6>\n                                    </div>\n                                    <div className=\"description-card__content\">\n                                        <p className=\"description-card__text\" style={{ whiteSpace: \"pre-wrap\" }}>{modalItem.description}</p>\n                                    </div>\n                                </div>\n                                <div className=\"item-card__prices prices-card\">\n                                    <div className=\"prices-card__prices\">\n                                        <div className=\"prices-card__price\">{modalItem.price}</div>\n                                        <div className=\"prices-card__currency\">руб.</div>\n                                    </div>\n                                    <div className=\"prices-card__quantity\">\n                                        <p className=\"prices-card__text\">Цена за 1 шт.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </article>\n                </div>\n            </div>\n            {lightBoxSrc && lightBoxOpen && (\n            <Lightbox\n                mainSrc={lightBoxSrc}\n                onClick={(e) => {console.log('stop') ;e.stopPropagation()}}\n                onCloseRequest={\n                    () => { setLightBoxOpen(false); if (!modalShow) unlockScroll()}\n                }\n            />\n            )\n            }\n\n        </div>\n    );\n};\n\nexport default ItemBrowse;\n","/home/kotoslav/projects/grob43/client/src/components/useScrollLock.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":18,"column":5,"nodeType":"100","endLine":18,"endColumn":7,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":33,"column":81,"nodeType":"104","messageId":"105","endLine":33,"endColumn":83},{"ruleId":"98","severity":1,"message":"106","line":45,"column":8,"nodeType":"100","endLine":45,"endColumn":42,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":23},{"ruleId":"108","severity":1,"message":"112","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"113","line":7,"column":18,"nodeType":"110","messageId":"111","endLine":7,"endColumn":29},{"ruleId":"108","severity":1,"message":"114","line":15,"column":11,"nodeType":"110","messageId":"111","endLine":15,"endColumn":18},{"ruleId":"108","severity":1,"message":"115","line":3,"column":22,"nodeType":"110","messageId":"111","endLine":3,"endColumn":32},{"ruleId":"108","severity":1,"message":"116","line":3,"column":34,"nodeType":"110","messageId":"111","endLine":3,"endColumn":44},{"ruleId":"108","severity":1,"message":"117","line":3,"column":46,"nodeType":"110","messageId":"111","endLine":3,"endColumn":55},{"ruleId":"108","severity":1,"message":"118","line":3,"column":57,"nodeType":"110","messageId":"111","endLine":3,"endColumn":61},{"ruleId":"108","severity":1,"message":"119","line":3,"column":75,"nodeType":"110","messageId":"111","endLine":3,"endColumn":83},{"ruleId":"108","severity":1,"message":"120","line":3,"column":85,"nodeType":"110","messageId":"111","endLine":3,"endColumn":91},{"ruleId":"121","severity":1,"message":"122","line":77,"column":61,"nodeType":"123","endLine":84,"endColumn":63},{"ruleId":"124","severity":1,"message":"125","line":127,"column":41,"nodeType":"126","endLine":127,"endColumn":95},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.","ArrayExpression",["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'item' and 'searchParams'. Either include them or remove the dependency array.",["130"],"no-unused-vars","'CATALOG_ROUTE' is defined but never used.","Identifier","unusedVar","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'history' is assigned a value but never used.","'Navigation' is defined but never used.","'Pagination' is defined but never used.","'Scrollbar' is defined but never used.","'A11y' is defined but never used.","'FreeMode' is defined but never used.","'Thumbs' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [item]",{"range":"135","text":"136"},"Update the dependencies array to be: [item.selectedCategory, item.page, item, searchParams]",{"range":"137","text":"138"},[477,479],"[item]",[1564,1598],"[item.selectedCategory, item.page, item, searchParams]"]