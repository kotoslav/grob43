[{"/home/syvv/projects/grob43/client/src/index.js":"1","/home/syvv/projects/grob43/client/src/store/ItemStore.js":"2","/home/syvv/projects/grob43/client/src/App.js":"3","/home/syvv/projects/grob43/client/src/components/AppRouter.js":"4","/home/syvv/projects/grob43/client/src/routes.js":"5","/home/syvv/projects/grob43/client/src/utils/consts.js":"6","/home/syvv/projects/grob43/client/src/pages/Shop.js":"7","/home/syvv/projects/grob43/client/src/pages/Contacts.js":"8","/home/syvv/projects/grob43/client/src/pages/Catalog.js":"9","/home/syvv/projects/grob43/client/src/components/CatalogCardsOnMainPage.js":"10","/home/syvv/projects/grob43/client/src/components/NavBar.js":"11","/home/syvv/projects/grob43/client/src/components/CategoryCards.js":"12","/home/syvv/projects/grob43/client/src/components/ItemList.js":"13","/home/syvv/projects/grob43/client/src/components/modals/ItemBrowse.js":"14","/home/syvv/projects/grob43/client/src/http/itemAPI.js":"15","/home/syvv/projects/grob43/client/src/utils/scrollUp.js":"16","/home/syvv/projects/grob43/client/src/components/useScrollLock.js":"17","/home/syvv/projects/grob43/client/src/http/index.js":"18"},{"size":345,"mtime":1698026518503,"results":"19","hashOfConfig":"20"},{"size":897,"mtime":1698026518503,"results":"21","hashOfConfig":"20"},{"size":286,"mtime":1697422449625,"results":"22","hashOfConfig":"20"},{"size":516,"mtime":1698026518430,"results":"23","hashOfConfig":"20"},{"size":423,"mtime":1697422449678,"results":"24","hashOfConfig":"20"},{"size":112,"mtime":1697422449681,"results":"25","hashOfConfig":"20"},{"size":2333,"mtime":1698042712233,"results":"26","hashOfConfig":"20"},{"size":2513,"mtime":1698053579196,"results":"27","hashOfConfig":"20"},{"size":6306,"mtime":1698048921493,"results":"28","hashOfConfig":"20"},{"size":1527,"mtime":1698054161889,"results":"29","hashOfConfig":"20"},{"size":1787,"mtime":1698026518456,"results":"30","hashOfConfig":"20"},{"size":1630,"mtime":1698046435409,"results":"31","hashOfConfig":"20"},{"size":2444,"mtime":1698046655616,"results":"32","hashOfConfig":"20"},{"size":10310,"mtime":1698052126923,"results":"33","hashOfConfig":"20"},{"size":392,"mtime":1698026518486,"results":"34","hashOfConfig":"20"},{"size":232,"mtime":1698026518503,"results":"35","hashOfConfig":"20"},{"size":318,"mtime":1698026518483,"results":"36","hashOfConfig":"20"},{"size":119,"mtime":1698026518486,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"p9xuia",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/syvv/projects/grob43/client/src/index.js",[],["80","81"],"/home/syvv/projects/grob43/client/src/store/ItemStore.js",[],"/home/syvv/projects/grob43/client/src/App.js",[],"/home/syvv/projects/grob43/client/src/components/AppRouter.js",[],"/home/syvv/projects/grob43/client/src/routes.js",[],"/home/syvv/projects/grob43/client/src/utils/consts.js",[],"/home/syvv/projects/grob43/client/src/pages/Shop.js",["82"],"import React, { useContext, useEffect } from 'react';\nimport CatalogCardsOnMainPage from '../components/CatalogCardsOnMainPage';\nimport { readAllCategory } from '../http/itemAPI';\nimport { Context } from '../index';\nimport { observer } from 'mobx-react-lite';\nimport NavBar from '../components/NavBar';\nimport { useHistory } from 'react-router-dom';\n\n\nconst Shop = observer(() => {\n\tconst { item } = useContext(Context);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\treadAllCategory().then(\n\t\t\tdata => {\n\t\t\t\titem.setCategories(data);\n\t\t\t}\n\t\t);\n\t}, [])\n\n\n\treturn (\n\t\t<div>\n\t\t\t<header className=\"header\">\n\t\t\t\t<div className=\"header__bg\">\n\t\t\t\t\t<img src=\"/img/header/bg-header.jpg\" alt=\"Фон\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<NavBar/>\n\t\t\t\t\t<div className=\"header__content\">\n\t\t\t\t\t\t<div className=\"home-content\">\n\t\t\t\t\t\t\t<div className=\"home-content__block\">\n\t\t\t\t\t\t\t\t<div className=\"home-content__column\">\n\t\t\t\t\t\t\t\t\t<div className=\"home-content__subtitle\">\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"home-content__subtitle-text\">Индивидуальный заказ <br />в минимальные сроки</h2>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"home-content__title\">\n\t\t\t\t\t\t\t\t\t\t<h1>Производство ритуальных товаров</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h3 className=\"home-content__subtitle-title\">В кировской области</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"home-content__button\">\n\t\t\t\t\t\t\t\t\t<a className=\"button\" href=\"/contacts\"\n\t\t\t\t\t\t\t\t\t\tonClick = {e => {\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\thistory.push(\"/contacts\");\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t><h5 className=\"button-text\">Схема проезда</h5><svg className=\"button-right\" width=\"12\" height=\"22\" viewBox=\"0 0 12 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t\t\t\t<path className=\"button-right\" d=\"M1 21L11 11L1 1\" stroke=\"#FAF8F1\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n\t\t\t\t\t\t\t\t\t</svg></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<section className=\"menu-icon\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"menu-icon__title\">\n\t\t\t\t\t\t\t<h2 className=\"title\">\n\t\t\t\t\t\t\t\tКаталог товаров\n\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<CatalogCardsOnMainPage />\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t</div>\n\t);\n});\n\nexport default Shop;\n","/home/syvv/projects/grob43/client/src/pages/Contacts.js",[],"/home/syvv/projects/grob43/client/src/pages/Catalog.js",["83","84","85","86"],"import React, { useContext, useEffect, useState } from 'react';\nimport CategoryCards from '../components/CategoryCards';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\nimport { readAllCategory, itemReadAllByCategory } from '../http/itemAPI';\nimport ItemsList from '../components/ItemList';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport NavBar from '../components/NavBar';\nimport ItemBrowse from '../components/modals/ItemBrowse';\nimport ReactPaginate from 'react-paginate';\n\nconst Catalog = observer(() => {\n    const { item } = useContext(Context);\n\n    const { search } = useLocation();\n    const searchParams = new URLSearchParams(search);\n    const history = useHistory();\n    const [modalShow, setModalShow] = useState(false);\n    const [modalItem, setModalItem] = useState({\n        id: 0,\n        gallery: [],\n        article: \"\",\n        description: \"\",\n        price: 0\n    });\n\n\n    useEffect(() => {\n        let page = Number(searchParams.get(\"page\"));\n        page = page ? page : 1;\n        const itemId = Number(searchParams.get(\"item\"));\n        item.setPage(  page  );\n          readAllCategory().then(\n            data => {\n                item.setCategories(data);\n                item.setSelectedCategory({ ...data.find((cat) => cat.id == searchParams.get(\"categoryId\")) });\n\n                itemReadAllByCategory(item.selectedCategory.id, page).then(\n            data => {\n                item.setItems(data);\n                if (itemId) {\n                    let itemById = item.items.find(el => el.id === itemId)\n                    if (itemById) {\n                        setModalItem(itemById );\n                        setModalShow(true);\n                    }\n                }\n            }\n        );\n\n            });\n\n    }, [])\n\n\n    useEffect(() => {\n        readAllCategory().then(\n            data => {\n                item.setCategories(data);\n                if (!item.selectedCategory.id) {\n                    if (searchParams.get(\"categoryId\")) {\n                        item.setSelectedCategory({ ...data.find((cat) => cat.id == searchParams.get(\"categoryId\")) });\n                    } else {\n                        item.setSelectedCategory({ ...data[0] })\n                    }\n                }\n            }\n        );\n        itemReadAllByCategory(item.selectedCategory.id, item.page).then(\n            data => {\n                item.setItems(data);\n            }\n        )\n    }, [item.selectedCategory, item.page])\n\n\n\n    return (\n        <div\n\n        ><div className=\"menu-brown\">\n                <header className=\"header-catalog\">\n                    <div className=\"container\">\n                        <NavBar />\n                    </div>\n                </header>\n            </div>\n            <main>\n                <section className=\"catalog\">\n                    <div className=\"container\">\n                        <div className=\"catalog__title\">\n                            <div className=\"title\">Каталог товаров</div>\n                        </div>\n                    </div>\n                    <CategoryCards />\n                    <div className=\"container\">\n                        <ItemsList setModalItem={setModalItem} setModalShow={setModalShow} />\n                    </div>\n\n                    {\n                       Math.ceil(item.totalCount / item.limit) > 1  && (\n                            <div className=\"catalog__pagination\">\n                                <div className=\"pagination\">\n\n                                    <ReactPaginate\n                                        breakLabel=\"...\"\n                                        nextLabel={\n                                            <svg className=\"pagination__svg\" width=\"14\" height=\"26\" viewBox=\"0 0 14 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path className=\"pagination__svg\" d=\"M0.999996 25L13 13L1 1\" stroke=\"#231C1B\" stroke-linecap=\"round\" stroke-linejoin=\"round\" /></svg>\n                                        }\n                                        onPageChange={(e) => {\n                                            item.setPage(e.selected + 1);\n                                            searchParams.set('page', e.selected + 1);\n                                            history.replace('/catalog?' + searchParams);\n                                        }}\n                                        pageRangeDisplayed={3}\n                                        forcePage={item.page - 1 }\n                                        pageCount={Math.ceil(item.totalCount / item.limit)}\n                                        previousLabel={\n                                            <svg className=\"pagination__svg\" width=\"14\" height=\"26\" viewBox=\"0 0 14 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path className=\"pagination__svg\" d=\"M13 0.999999L1 13L13 25\" stroke=\"#231C1B\" strokeLinecap=\"round\" stroke-linejoin=\"round\" /></svg>\n                                        }\n                                        renderOnZeroPageCount={null}\n                                        className=\"mt-5 pagination\"\n                                        pageClassName=\"page-item\"\n                                        activeLinkClassName=\"pagination__link--active\"\n                                        pageLinkClassName=\"pagination__link\"\n                                        previousClassName=\"page-item\"\n                                        previousLinkClassName=\"pagination__link pagination__link--box\"\n                                        nextClassName=\"page-item\"\n                                        nextLinkClassName=\"pagination__link pagination__link--box\"\n                                        marginPagesDisplayed={1}\n                                    />\n\n\n                                </div>\n                            </div>\n                        )\n                    }\n\n                </section>\n            </main>\n            <ItemBrowse\n                modalItem={modalItem}\n                modalShow={modalShow}\n                setModalShow={setModalShow}\n            />\n        </div>\n    );\n});\n\nexport default Catalog;\n","/home/syvv/projects/grob43/client/src/components/CatalogCardsOnMainPage.js",[],"/home/syvv/projects/grob43/client/src/components/NavBar.js",[],"/home/syvv/projects/grob43/client/src/components/CategoryCards.js",["87","88"],"import React, { useContext } from 'react';\nimport { Context } from '../index';\nimport { observer } from 'mobx-react-lite';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CATALOG_ROUTE } from '../utils/consts';\n\n\n\n\nconst CategoryCards = observer(() => {\n    const { item } = useContext(Context);\n    const history = useHistory();\n    const { search } = useLocation();\n    const searchParams = new URLSearchParams(search);\n\n    return (\n        <div className=\"catalog__menu\">\n            <nav className=\"catalog__nav\">\n                <ul className=\"catalog__list\">\n                    {item.categories.map((cat) => {\n                        //searchParams.set(\"categoryId\", cat.id);\n                        let catRoute = CATALOG_ROUTE + \"?\" + \"categoryId=\" + cat.id;\n                        return (<li className=\"catalog__item-menu\" key={cat.id}>\n                            <a\n                                className={`catalog__link ${cat.id === item.selectedCategory.id ? 'catalog__link-active' : \"\"}`}\n                                href={catRoute}\n                                onClick={e => {\n                                    e.preventDefault();\n                                    item.setSelectedCategory(cat);\n                                    history.replace(catRoute)\n\n                                }}\n                            >\n                                {cat.title}\n                            </a>\n                        </li>)\n                    }\n\n                    )}\n\n                </ul>\n            </nav>\n        </div>\n    )\n});\n\nexport default CategoryCards;\n","/home/syvv/projects/grob43/client/src/components/ItemList.js",["89","90","91","92"],"import React, { useContext } from 'react';\nimport { Context } from '../index';\nimport { observer } from 'mobx-react-lite';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { CATALOG_ROUTE } from '../utils/consts';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { useScrollLock } from './useScrollLock';\n\n//import { FreeMode, Navigation, Thumbs } from 'swiper/modules';\n\n\nconst ItemsList = observer(({ setModalItem, setModalShow }) => {\n    const { item } = useContext(Context);\n    const history = useHistory();\n    const {lockScroll} = useScrollLock();\n    const { search } = useLocation();\n    const searchParams = new URLSearchParams(search);\n\n    return (\n        <div className=\"catalog__items\">\n            {item.items.map((itemCard) =>\n                <article\n\n                    className=\"catalog__item item-catalog\"\n                    key={itemCard.id}\n                    onClick={() => {\n                        setModalItem(itemCard);\n                        setModalShow(true);\n                        searchParams.set('item', itemCard.id);\n                        history.replace('/catalog' + '?' + searchParams);\n                        lockScroll();\n                    }}\n                >\n                    <div className=\"item-catalog__block\">\n                        <div className=\"item-catalog__img\">\n                        { itemCard.gallery[0]?  <img src={process.env.REACT_APP_API_URL + itemCard.gallery[0]} alt=\"Фотография товара\" /> : <div></div>}\n\n\n                        </div>\n                        <div className=\"item-catalog__body\">\n                            <div className=\"item-catalog__content\">\n                                <h6 className=\"item-catalog__title\">{itemCard.name}</h6>\n                            </div>\n                            <div className=\"item-catalog__prices\">\n                                <div className=\"item-catalog__price\">{itemCard.price}</div>\n                                <div className=\"item-catalog__currency\">руб.</div>\n                            </div>\n                            <div className=\"item-catalog__quantity\">\n                                <p className=\"item-catalog__text\">Цена за 1 шт.</p>\n                            </div>\n                        </div>\n                    </div>\n                </article>\n            )}\n\n        </div>\n    )\n});\n\nexport default ItemsList;\n","/home/syvv/projects/grob43/client/src/components/modals/ItemBrowse.js",["93","94","95","96","97","98","99","100"],"import React, { useRef, useState, useEffect } from 'react';\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Controller, FreeMode, Thumbs } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport 'swiper/swiper.css';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { useScrollLock } from '../useScrollLock';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nSwiperCore.use([Controller]);\n\n\nconst ItemBrowse = ({ modalItem, modalShow, setModalShow }) => {\n    const swiperRefControl = useRef(null);\n    const swiperRef = useRef(null);\n    const thumbnailRef = useRef(null);\n    const [lightBoxOpen, setLightBoxOpen] = useState(false);\n    const [lightBoxSrc, setLightBoxSrc] = useState(null);\n    const {lockScroll, unlockScroll} = useScrollLock();\n\n    const { search } = useLocation();\n    const searchParams = new URLSearchParams(search);\n    const history = useHistory();\n\n\n    useEffect(() => {\n      const gallerySwiper = swiperRef.current.swiper;\n      const thumbnailSwiper = thumbnailRef.current.swiper;\n      if (gallerySwiper.controller && thumbnailSwiper.controller\n      ) {\n        gallerySwiper.controller.control = thumbnailSwiper;\n        thumbnailSwiper.controller.control = gallerySwiper;\n      }\n    }, []);\n\n    return (\n        <div\n            className={`modal-card ${modalShow ? 'open' : ''}`}\n            onClick={() =>\n                {\n                        if (!lightBoxOpen){\n                            setModalShow(false);\n                            unlockScroll();\n                            searchParams.delete('item');\n                            history.replace('/catalog?' + searchParams );\n\n                        }\n                        }\n            }\n            id=\"modal-product\"\n        >\n            <div className=\"modal-card__box\" onClick={(e) => e.stopPropagation()}>\n                <button className=\"modal-card__close-btn\" id=\"close-modal-product-btn\" onClick={\n                    () =>\n                    {\n                        setModalShow(false);\n                        unlockScroll();\n                        searchParams.delete('item');\n                        history.replace('/catalog?' + searchParams );\n\n                    }\n                }>\n                    <svg className=\"modal-card__svg\" width=\"31\" height=\"31\" viewBox=\"0 0 31 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path className=\"modal-card__svg\" d=\"M29.5 2L2 29.5\" stroke=\"black\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                        <path className=\"modal-card__svg\" d=\"M2 2L29.5 29.5\" stroke=\"black\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                    </svg>\n                </button>\n                <div className=\"modal-card__content\">\n                    <div className=\"modal-card__carousel carousel-card\">\n                        <div className=\"carousel-card__block\">\n                            <div className=\"carousel-card__images\" style={{ position: \"relative\" }}>\n                                <div className=\"carousel-card__top top-img\">\n                                    <Swiper\n                                        style={{ height: '100%' }}\n                                        slidesPerView={1}\n\n                                        onSwiper={(swiper) => {\n                                            swiperRefControl.current = swiper;\n                                        }}\n\n                                        ref={swiperRef}\n\n                                        //controller={{ control: secondSwiper }}\n                                    >\n                                        <div className=\"top-img__image\">\n\n                                            {\n                                                modalItem.gallery.map(img =>\n                                                    <SwiperSlide key={img} >\n                                                        <div className={'top-img__image'}>\n                                                            <img src={process.env.REACT_APP_API_URL + img}\n                                                                className={'top-img__img'}\n                                                                onClick={() => {\n                                                                    setLightBoxSrc(process.env.REACT_APP_API_URL + img);\n                                                                    setLightBoxOpen(true);\n                                                                    lockScroll();\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    </SwiperSlide>\n\n                                                )\n                                            }\n\n                                        </div>\n\n\n                                    </Swiper>\n\n                                    {modalItem.gallery.length>1 ?\n                                        <>\n                                        <button className=\"top-img__btn-right\"\n                                        onClick={() => swiperRefControl.current.slideNext()}\n\n                                    ><svg className=\"top-img__btn\" width=\"23\" height=\"42\" viewBox=\"0 0 23 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path className=\"top-img__btn\" d=\"M1.99999 40L21 21L2 2\" stroke=\"#231C1B\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </button>\n\n                                    <button className=\"top-img__btn-left\"\n                                        onClick={() => swiperRefControl.current.slidePrev()}\n                                    ><svg className=\"top-img__btn\" width=\"23\" height=\"42\" viewBox=\"0 0 23 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path className=\"top-img__btn\" d=\"M21 2L2 21L21 40\" stroke=\"#231C1B\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                        </svg>\n                                    </button>\n                                        </>\n                                        :\n                                        \"\"\n                                    }\n\n\n                                </div>\n\n                                <div className=\"carousel-card__bottom bottom-img\">\n\n                                    <Swiper\n                                        slidesPerView={'auto'}\n                                        spaceBetween={10}\n                                        centeredSlides={true}\n                                        slideToClickedSlide={true}\n                                        slidesPerView={ modalItem.gallery.length >= 3 ? 3 : 2}\n                                        ref={thumbnailRef}\n                                    >\n\n                                        { modalItem.gallery.length>1 && modalItem.gallery.map(img =>\n                                            <SwiperSlide key={img}>\n                                                <div className={\"bottom-img__bg\"} >\n                                                    <img className=\"bottom-img__image\" src={process.env.REACT_APP_API_URL + img} alt=\"Фотография товара\" />\n                                                </div>\n                                            </SwiperSlide>\n                                        )}\n\n\n                                    </Swiper>\n\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                    <article className=\"modal-card__item item-card\">\n                        <div className=\"item-card__block\">\n                            <div className=\"item-card__body\">\n                                <div className=\"item-card__title title-card\">\n                                    <h3 className=\"title-card__title\">{modalItem.name}</h3>\n                                    <h5 className=\"title-card__article\">Артикул: {modalItem.article}</h5>\n                                </div>\n                                <div className=\"item-card__description description-card\">\n                                    <div className=\"description-card__title\">\n                                        <h6 className=\"description-card__title-text\">Описание товара</h6>\n                                    </div>\n                                    <div className=\"description-card__content\">\n                                        <p className=\"description-card__text\" style={{ whiteSpace: \"pre-wrap\" }}>{modalItem.description}</p>\n                                    </div>\n                                </div>\n                                <div className=\"item-card__prices prices-card\">\n                                    <div className=\"prices-card__prices\">\n                                        <div className=\"prices-card__price\">{modalItem.price}</div>\n                                        <div className=\"prices-card__currency\">руб.</div>\n                                    </div>\n                                    <div className=\"prices-card__quantity\">\n                                        <p className=\"prices-card__text\">Цена за 1 шт.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </article>\n                </div>\n            </div>\n            {lightBoxSrc && lightBoxOpen && (\n            <Lightbox\n                mainSrc={lightBoxSrc}\n                onClick={(e) => {console.log('stop') ;e.stopPropagation()}}\n                onCloseRequest={\n                    () => { setLightBoxOpen(false); if (!modalShow) unlockScroll()}\n                }\n            />\n            )\n            }\n\n        </div>\n    );\n};\n\nexport default ItemBrowse;\n","/home/syvv/projects/grob43/client/src/http/itemAPI.js",[],"/home/syvv/projects/grob43/client/src/utils/scrollUp.js",[],"/home/syvv/projects/grob43/client/src/components/useScrollLock.js",[],"/home/syvv/projects/grob43/client/src/http/index.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":20,"column":5,"nodeType":"107","endLine":20,"endColumn":7,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":36,"column":73,"nodeType":"111","messageId":"112","endLine":36,"endColumn":75},{"ruleId":"105","severity":1,"message":"113","line":53,"column":8,"nodeType":"107","endLine":53,"endColumn":10,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"110","line":62,"column":81,"nodeType":"111","messageId":"112","endLine":62,"endColumn":83},{"ruleId":"105","severity":1,"message":"113","line":74,"column":8,"nodeType":"107","endLine":74,"endColumn":42,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":14,"column":11,"nodeType":"118","messageId":"119","endLine":14,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":22,"column":60,"nodeType":"111","messageId":"122","endLine":22,"endColumn":61},{"ruleId":"116","severity":1,"message":"123","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":23},{"ruleId":"116","severity":1,"message":"124","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":16},{"ruleId":"116","severity":1,"message":"125","line":7,"column":18,"nodeType":"118","messageId":"119","endLine":7,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":31,"column":52,"nodeType":"111","messageId":"122","endLine":31,"endColumn":53},{"ruleId":"116","severity":1,"message":"126","line":3,"column":22,"nodeType":"118","messageId":"119","endLine":3,"endColumn":32},{"ruleId":"116","severity":1,"message":"127","line":3,"column":34,"nodeType":"118","messageId":"119","endLine":3,"endColumn":44},{"ruleId":"116","severity":1,"message":"128","line":3,"column":46,"nodeType":"118","messageId":"119","endLine":3,"endColumn":55},{"ruleId":"116","severity":1,"message":"129","line":3,"column":57,"nodeType":"118","messageId":"119","endLine":3,"endColumn":61},{"ruleId":"116","severity":1,"message":"130","line":3,"column":75,"nodeType":"118","messageId":"119","endLine":3,"endColumn":83},{"ruleId":"116","severity":1,"message":"131","line":3,"column":85,"nodeType":"118","messageId":"119","endLine":3,"endColumn":91},{"ruleId":"132","severity":1,"message":"133","line":93,"column":61,"nodeType":"134","endLine":100,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":143,"column":41,"nodeType":"137","messageId":"138","endLine":143,"endColumn":95},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.","ArrayExpression",["141"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'item' and 'searchParams'. Either include them or remove the dependency array.",["142"],["143"],"no-unused-vars","'searchParams' is assigned a value but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'CATALOG_ROUTE' is defined but never used.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'Navigation' is defined but never used.","'Pagination' is defined but never used.","'Scrollbar' is defined but never used.","'A11y' is defined but never used.","'FreeMode' is defined but never used.","'Thumbs' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [item]",{"range":"150","text":"151"},"Update the dependencies array to be: [item, searchParams]",{"range":"152","text":"153"},"Update the dependencies array to be: [item.selectedCategory, item.page, item, searchParams]",{"range":"154","text":"155"},[555,557],"[item]",[1809,1811],"[item, searchParams]",[2481,2515],"[item.selectedCategory, item.page, item, searchParams]"]