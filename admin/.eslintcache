[{"/home/kotoslav/projects/grob43/admin/src/index.js":"1","/home/kotoslav/projects/grob43/admin/src/App.js":"2","/home/kotoslav/projects/grob43/admin/src/store/UserStore.js":"3","/home/kotoslav/projects/grob43/admin/src/store/ItemStore.js":"4","/home/kotoslav/projects/grob43/admin/src/http/userAPI.js":"5","/home/kotoslav/projects/grob43/admin/src/http/itemAPI.js":"6","/home/kotoslav/projects/grob43/admin/src/components/AppRouter.js":"7","/home/kotoslav/projects/grob43/admin/src/http/index.js":"8","/home/kotoslav/projects/grob43/admin/src/utils/consts.js":"9","/home/kotoslav/projects/grob43/admin/src/routes.js":"10","/home/kotoslav/projects/grob43/admin/src/pages/Auth.js":"11","/home/kotoslav/projects/grob43/admin/src/pages/Admin.js":"12","/home/kotoslav/projects/grob43/admin/src/components/ItemList.js":"13","/home/kotoslav/projects/grob43/admin/src/components/CategoriesBar.js":"14","/home/kotoslav/projects/grob43/admin/src/components/NavBar.js":"15","/home/kotoslav/projects/grob43/admin/src/components/modals/CreateItem.js":"16","/home/kotoslav/projects/grob43/admin/src/components/modals/CreateCategory.js":"17","/home/kotoslav/projects/grob43/admin/src/components/Item.js":"18","/home/kotoslav/projects/grob43/admin/src/components/ItemForm.js":"19","/home/kotoslav/projects/grob43/admin/src/components/CategoryForm.js":"20","/home/kotoslav/projects/grob43/admin/src/components/PaginationPages.js":"21"},{"size":415,"mtime":1697377697612,"results":"22","hashOfConfig":"23"},{"size":1210,"mtime":1697880860170,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1697810350412,"results":"25","hashOfConfig":"23"},{"size":897,"mtime":1697991250133,"results":"26","hashOfConfig":"23"},{"size":456,"mtime":1697647559103,"results":"27","hashOfConfig":"23"},{"size":1398,"mtime":1697877727045,"results":"28","hashOfConfig":"23"},{"size":777,"mtime":1697647258429,"results":"29","hashOfConfig":"23"},{"size":304,"mtime":1697640672441,"results":"30","hashOfConfig":"23"},{"size":158,"mtime":1697385413153,"results":"31","hashOfConfig":"23"},{"size":318,"mtime":1697381879819,"results":"32","hashOfConfig":"23"},{"size":2104,"mtime":1697810281814,"results":"33","hashOfConfig":"23"},{"size":2892,"mtime":1697880921225,"results":"34","hashOfConfig":"23"},{"size":2069,"mtime":1697810229022,"results":"35","hashOfConfig":"23"},{"size":4363,"mtime":1697878879504,"results":"36","hashOfConfig":"23"},{"size":841,"mtime":1697810016487,"results":"37","hashOfConfig":"23"},{"size":3112,"mtime":1697818660863,"results":"38","hashOfConfig":"23"},{"size":3021,"mtime":1697879844516,"results":"39","hashOfConfig":"23"},{"size":1294,"mtime":1697883204198,"results":"40","hashOfConfig":"23"},{"size":12163,"mtime":1697903850417,"results":"41","hashOfConfig":"23"},{"size":7387,"mtime":1697904084053,"results":"42","hashOfConfig":"23"},{"size":1063,"mtime":1697994206762,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1zt14l",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kotoslav/projects/grob43/admin/src/index.js",[],["91","92"],"/home/kotoslav/projects/grob43/admin/src/App.js",["93","94","95","96","97"],"import React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from './index';\nimport { check } from './http/userAPI';\nimport { readAllCategory, itemReadAllByCategory } from './http/itemAPI';\n\nconst App = observer (() => {\n    const {user, item} = useContext(Context);\n     const [loading, setLoading] = useState(true);\n\n     useEffect(() => {\n        check()\n        .then(data => {\n            user.setIsAuth(true)\n        })\n        .catch((e) => {\n            user.setIsAuth(false)\n        }\n        )\n        .finally(() => setLoading(false));\n/*\n        readAllCategory().then(\n            data => {\n                item.setCategories(data);\n                //item.setSelectedCategory({...data[0]});\n            }\n        );\n        itemReadAllByCategory(item.selectedCategory.id).then(\n            data => item.setItems(data)\n        );\n*/\n\n    }, [])\n\n    return (\n        <BrowserRouter>\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","/home/kotoslav/projects/grob43/admin/src/store/UserStore.js",[],"/home/kotoslav/projects/grob43/admin/src/store/ItemStore.js",[],"/home/kotoslav/projects/grob43/admin/src/http/userAPI.js",[],"/home/kotoslav/projects/grob43/admin/src/http/itemAPI.js",[],"/home/kotoslav/projects/grob43/admin/src/components/AppRouter.js",[],"/home/kotoslav/projects/grob43/admin/src/http/index.js",[],"/home/kotoslav/projects/grob43/admin/src/utils/consts.js",[],"/home/kotoslav/projects/grob43/admin/src/routes.js",[],"/home/kotoslav/projects/grob43/admin/src/pages/Auth.js",[],"/home/kotoslav/projects/grob43/admin/src/pages/Admin.js",["98"],"import React, { useState, useContext, useEffect} from 'react';\nimport NavBar from '../components/NavBar';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport CategoriesBar from '../components/CategoriesBar';\nimport ItemList from '../components/ItemList';\nimport CreateCategory from '../components/modals/CreateCategory';\nimport CreateItem from '../components/modals/CreateItem';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index';\nimport { itemReadAllByCategory, readAllCategory } from '../http/itemAPI';\nimport PaginationPages from '../components/PaginationPages';\n\n\nconst Admin = observer ( () => {\n    const {item} = useContext(Context);\n\n    useEffect(() => {\n        readAllCategory().then(\n            data => {\n                item.setCategories(data);\n                if (!item.selectedCategory.id)\n                item.setSelectedCategory({...data[0]})\n            }\n        );\n\n        itemReadAllByCategory(item.selectedCategory.id, item.page).then(\n        data => {item.setItems(data);\n        }\n    );\n    }, [item.page, item.selectedCategory])\n\n    const [categoryVisible, setCategoryVisible] = useState(false);\n    const [itemVisible, setItemVisible] = useState(false);\n    const [modalCategory, setModalCategory] = useState({});\n    const [modalItem, setModalItem] = useState({});\n    return (\n        <div className='bg-secondary' style={{minHeight:\"100vh\", height: '100%', paddingBottom:'3rem'}}>\n            <NavBar />\n            <Container>\n                <Row className='mt-2'>\n                    <Col md={3}>\n                    <CategoriesBar\n                    modal={{categoryVisible, setCategoryVisible, modalCategory, setModalCategory}}\n                    />\n                    </Col>\n                    <Col md={9}>\n\n                    {item.selectedCategory.id ?\n                    <Button\n                    variant={'outline-light'}\n                    onClick={() => {\n                        setItemVisible(true);\n                        setModalItem({});\n                    }}\n                    >Добавить новый товар</Button>\n                    : \"\"\n                    }\n\n\n                    <ItemList\n                    modal={{setModalItem, setItemVisible}}\n                    />\n                    <PaginationPages/>\n                    </Col>\n                </Row>\n                <CreateCategory\n                modalCategory={modalCategory}\n                setModalCategory={setModalCategory}\n                show={categoryVisible}\n                onHide={() => setCategoryVisible(false)} />\n                <CreateItem\n                modalItem={modalItem}\n                setModalItem={ setModalItem}\n                show={itemVisible}\n                onHide={() => setItemVisible(false)}/>\n            </Container>\n        </div>\n    );\n})\n\n\nexport default Admin;\n","/home/kotoslav/projects/grob43/admin/src/components/ItemList.js",[],"/home/kotoslav/projects/grob43/admin/src/components/CategoriesBar.js",[],"/home/kotoslav/projects/grob43/admin/src/components/NavBar.js",[],"/home/kotoslav/projects/grob43/admin/src/components/modals/CreateItem.js",[],"/home/kotoslav/projects/grob43/admin/src/components/modals/CreateCategory.js",[],"/home/kotoslav/projects/grob43/admin/src/components/Item.js",[],"/home/kotoslav/projects/grob43/admin/src/components/ItemForm.js",["99","100","101","102","103","104","105"],"import React, { createRef } from \"react\";\nimport { Form, Row, Col, CloseButton, Card } from \"react-bootstrap\";\nimport { $host } from \"../http\";\nimport { uploadImage } from \"../http/itemAPI\";\n\nclass ItemForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = props.state;\n        this.setModalItem = props.setModalItem;\n        this.state.galleryDrop = this.state.gallery ? [...this.state.gallery] : [];\n        this.state.galleryDrop = this.state.galleryDrop.map((imgPath, id) => { return { order: id, imgPath: imgPath, id: id } });\n        this.counter = this.state.galleryDrop.length;\n        this.state.drag = false;\n        this.category = props.category;\n        this.setForm = props.setForm;\n\n        this.setValidForm = props.setValidForm;\n        this.state.validName = true;\n        this.state.validArticle = true;\n\n        this.filePicker = createRef();\n\n        this.handlePick = () => {\n            this.filePicker.current.click();\n        }\n\n    }\n\n    formValidation(form) {\n        let valid = this.validationName(form.name) && this.validationArticle(form.article);\n        this.setValidForm(valid);\n    }\n\n    validationName(value) {\n        let valid = this.notEmpty(value);\n        this.setState({ validName: valid })\n        return this.notEmpty(value);\n    }\n\n    validationArticle(value) {\n        let valid = this.notEmpty(value);\n        this.setState({ validArticle: valid })\n        return valid;\n    }\n\n    notEmpty(value) {\n        return Boolean(value !== 0 && value !== \"\" && value);\n    }\n\n\n    passForm() {\n\n        let gallery = this.state.galleryDrop\n            .sort((a, b) => {\n                if (a.order > b.order) {\n                    return 1\n                } else {\n                    return -1;\n                }\n            })\n            .map(pic => pic.imgPath);\n        let form = {\n            name: this.state.name,\n            description: this.state.description,\n            article: this.state.article,\n            price: Number(this.state.price),\n            categoryId: Number(this.state.categoryId),\n            gallery: gallery\n        };\n        this.formValidation(form)\n        this.setForm(form);\n    }\n\n    galleryPush(imgPath) {\n        let gallery = [...this.state.galleryDrop, { order: Date.now(), imgPath: imgPath, id: Date.now() }];\n        this.setState({ galleryDrop: gallery });\n        this.state.galleryDrop = gallery;\n        this.passForm()\n    }\n\n    galleryDelete(imgOrder) {\n        let gallery = [...this.state.galleryDrop].filter((img) => img.order !== imgOrder);\n        this.setState({ galleryDrop: gallery });\n        this.state.galleryDrop = gallery;\n        this.passForm()\n    }\n\n    dragPreviewStart(e, img) {\n        this.setState({ currentIMG: { ...img } })\n    }\n\n    dragPreviewLeave(e) {\n    }\n\n    dragPreviewEnd(e) {\n        this.passForm()\n    }\n    dragPreviewOver(e) {\n        e.preventDefault();\n    }\n\n    previewDrop(e, img) {\n        e.preventDefault();\n\n        let files = [...e.dataTransfer.files];\n        if (files.length === 0) {\n            let gallery = this.state.galleryDrop.map(\n                (imgMap) => {\n                    if (imgMap.id === img.id) {\n                        return { ...imgMap, order: this.state.currentIMG.order }\n                    };\n                    if (imgMap.id === this.state.currentIMG.id) {\n                        return { ...imgMap, order: img.order }\n                    }\n                    return imgMap;\n                });\n\n            this.setState({ galleryDrop: gallery })\n            this.state.galleryDrop = gallery;\n            this.passForm();\n\n        }\n    }\n\n\n    onDropHandler(e) {\n        e.preventDefault();\n        let files = [...e.dataTransfer.files];\n        this.uploadFiles(files);\n        this.setState({ drag: false });\n    }\n\n    onInputFileChange(e) {\n        let files = [...e.target.files];\n        this.uploadFiles(files);\n        this.setState({ drag: false });\n    }\n\n    uploadFiles(files) {\n        const fileExtensions = ['jpeg', 'jpg', 'png', 'webp', 'gif', 'svg']\n        if (files) {\n            files.forEach((file) => {\n                if (fileExtensions.includes(file.name.split('.').at(-1).toLowerCase())) {\n                        uploadImage(file)\n                        .then(data => {\n                            this.galleryPush(data.imgPath);\n                        })\n                }\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <Form onKeyUp={() => this.passForm()} onDrop={() => this.passForm()} onChange={() => this.passForm()} onKeyDown={(e) => {if (e.key === 'Enter') e.preventDefault()}} >\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Наименование</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            value={this.state.name}\n                            onChange={(e) => this.setState({ name: e.target.value })}\n                            placeholder=\"Наименование\"\n                            className={`  ${this.state.validName ? \"\" : \"border-danger\"} `}\n                        />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Описание</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control as=\"textarea\"\n                        rows={3}\n                        value={this.state.description}\n                        onChange={(e) => this.setState({ description: e.target.value })}\n                        onKeyDown={(e) => {if (e.key === 'Enter') e.stopPropagation()}}\n                        placeholder=\"Описание\"\n                        />\n                    </Col>\n                </Form.Group>\n\n\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Артикул</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            value={this.state.article}\n                            onChange={(e) => this.setState({ article: e.target.value })}\n                            placeholder=\"Артикул\"\n                            className={`  ${this.state.validArticle ? \"\" : \"border-danger\"} `}\n                        />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Стоимость</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control type=\"number\" value={this.state.price} onChange={(e) => this.setState({ price: e.target.value })} placeholder=\"Стоимость\" />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\" className={\"input-group-text\"} >Категория</Form.Label>\n                    <Col sm=\"10\">\n                        <select className={\"custom-select\"} defaultValue={this.state.categoryId} onChange={(e) => { this.state.categoryId = e.target.value; this.setState({ categoryId: e.target.value }) }} >\n                            {\n\n                                <option value={this.state.categoryId}>{\n                                    this.category.categories.find(cat => cat.id == this.state.categoryId).title\n                                }</option>\n\n                            }\n                            {\n                                this.category.categories\n                                    .filter(\n                                        cat => cat.id !== this.category.selectedCategory.id\n                                    )\n                                    .map(cat =>\n                                        <option key={cat.id} value={cat.id}>{cat.title}</option>\n                                    )\n\n                            }\n                        </select>\n                    </Col>\n\n                </Form.Group>\n\n\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Галерея</Form.Label>\n\n                    <input\n                        style={{\n                            opacity: 0,\n                            widows: 0,\n                            height: 0\n                        }}\n                        type=\"file\"\n                        accept=\"image/*, .png, .jpg, .gif, .web, .webp, .svg\"\n                        onChange={(e) => this.onInputFileChange(e)}\n                        ref={this.filePicker}\n                        multiple\n                    />\n\n\n                    <Card\n                        style={{ width: \"100%\", minHeight: 110 }}\n                        className={`m-2 d-flex flex-row flex-wrap  ${this.state.drag ? \"border-primary\" : \"\"} `}\n                        onDragEnter={(e) => {\n                            e.preventDefault();\n                            this.setState({ drag: true });\n                        }}\n                        onDragLeave={(e) => {\n                            e.preventDefault();\n                            this.setState({ drag: false });\n                        }}\n                        onDragOver={(e) => {\n\n                            e.preventDefault();\n                            this.setState({ drag: true });\n                        }}\n                        onDrop={(e) => this.onDropHandler(e)}\n                        onClick={this.handlePick}\n                    >\n                        {this.state.galleryDrop.length > 0 ? this.state.galleryDrop\n                            .sort((a, b) => {\n                                if (a.order > b.order) {\n                                    return 1\n                                } else {\n                                    return -1;\n                                }\n                            })\n                            .map((img) =>\n                                <Card\n                                    key={img.order}\n                                    style={{ width: \"100px\", height: \"100px\", position: \"relative\" }}\n                                    draggable={true}\n                                    onDragStart={(e) => this.dragPreviewStart(e, img)}\n                                    onDragEnd={(e) => this.dragPreviewEnd(e)}\n                                    onDragLeave={(e) => this.dragPreviewLeave(e)}\n                                    onDragOver={(e) => this.dragPreviewOver(e)}\n                                    onDrop={(e) => this.previewDrop(e, img)}\n                                    onClick={(e) => e.stopPropagation()}\n                                >\n                                    <CloseButton\n                                        style={{ position: 'absolute', top: 5, right: 10, fontSize: 32 }}\n                                        className={'text-danger'}\n                                        onClick={\n                                            () => { this.galleryDelete(img.order) }\n                                        } />\n                                    <img\n                                        src={process.env.REACT_APP_API_URL + img.imgPath}\n                                        style={{ objectFit: 'cover', width: '100%', height: '100%' }}\n                                    />\n                                </Card>\n                            ) :\n                            <span\n                                style={{\n                                    display: 'flex',\n                                    width: '100%',\n                                    alignItems: 'center',\n                                    justifyContent: 'center'\n                                }}\n                            >Перетяните нужные изображения в эту область</span>\n                        }\n                    </Card>\n\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default ItemForm\n","/home/kotoslav/projects/grob43/admin/src/components/CategoryForm.js",["106","107","108"],"import React, { createRef } from \"react\";\nimport { Form, Row, Col, CloseButton, Card } from \"react-bootstrap\";\nimport { $host } from \"../http\";\nimport { uploadImage } from \"../http/itemAPI\";\n\nclass CategoryForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = props.state;\n        this.setModalCategory = props.setModalCategory;\n        this.setForm = props.setForm;\n        this.state.gallery = this.state.imgPath ? [this.state.imgPath] : [];\n        this.gallery = [];\n        this.state.drag = false;\n        this.filePicker = createRef();\n\n        this.handlePick = () => {\n            this.filePicker.current.click();\n        }\n\n        this.setValidForm = props.setValidForm;\n        this.state.validTitle = true;\n        this.state.validImgPath = true;\n\n    }\n\n    formValidation(form) {\n        this.setState({ validTitle: this.validationTitle(form.title) })\n        this.setState({ validImgPath: this.validationImgPath(form.imgPath) })\n        let valid = this.validationTitle(form.title) && this.validationImgPath(form.imgPath);\n        this.setValidForm(valid);\n    }\n\n    validationTitle(value) {\n        return this.notEmpty(value);\n    }\n\n    validationImgPath(value) {\n        return this.notEmpty(value);\n    }\n\n    notEmpty(value) {\n        return Boolean(value !== 0 && value !== \"\" && value);\n    }\n\n    changeTitle(e) {\n        this.setState({ title: e.target.value })\n    }\n\n    galleryPush(imgPath) {\n        let gallery = [imgPath]\n        this.setState({ gallery: gallery });\n        this.passForm();\n    }\n\n    galleryDelete(imgPath) {\n        let gallery = [...this.state.gallery].filter((img) => img !== imgPath);\n        this.setState({ gallery: gallery });\n        this.state.gallery = gallery;\n        this.passForm();\n    }\n\n    passForm() {\n        let form = {\n            title: this.state.title,\n            description: this.state.description,\n            imgPath: this.state.gallery[0] ?? \"\"\n        };\n        this.setState({ imgPath: form.imgPath });\n        this.formValidation(form);\n        this.setForm(form);\n    }\n\n\n    onDropHandler(e) {\n        e.preventDefault();\n        let files = [...e.dataTransfer.files];\n        this.uploadFiles(files);\n        this.setState({ drag: false });\n    }\n\n    onInputFileChange(e) {\n        let files = [...e.target.files];\n        this.uploadFiles(files);\n        this.setState({ drag: false });\n    }\n\n    uploadFiles(files) {\n        const fileExtensions = ['jpeg', 'jpg', 'png', 'webp', 'gif', 'svg']\n        if (files && !this.state.imgPath) {\n            if (fileExtensions.includes(files[0].name.split('.').at(-1).toLowerCase())) {\n                uploadImage(files[0])\n                    .then(data => {\n                        this.galleryPush(data.imgPath);\n                    })\n            }\n        }\n    }\n\n\n\n    render() {\n        return (\n            <Form onKeyUp={() => this.passForm()} onDrop={() => this.passForm()} onKeyDown={(e) => {if (e.key === 'Enter') e.preventDefault()}}>\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Заголовок</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control\n                            value={this.state.title}\n                            onChange={(e) => this.changeTitle(e)}\n                            placeholder=\"Заголовок\"\n                            className={`  ${this.state.validTitle ? \"\" : \"border-danger\"} `} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Описание</Form.Label>\n                    <Col sm=\"10\">\n                        <Form.Control as=\"textarea\" rows={3} value={this.state.description} onChange={(e) => this.setState({ description: e.target.value })} onKeyDown={(e) => {if (e.key === 'Enter') e.stopPropagation()}} placeholder=\"Описание\" />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} className=\"mb-3\">\n                    <Form.Label column sm=\"2\">Изображение</Form.Label>\n\n                    <input\n                        style={{\n                            opacity: 0,\n                            widows: 0,\n                            height: 0\n                        }}\n                        type=\"file\"\n                        accept=\"image/*, .png, .jpg, .gif, .web, .webp, .svg\"\n                        onChange={(e) => this.onInputFileChange(e)}\n                        ref={this.filePicker}\n                        onClick={(e) => { if (this.state.imgPath) { e.preventDefault(); alert(\"Для категории невозможно загрузить более одного изображения, удалите текущее прежде чем загрузить новое\") } }}\n                        multiple\n                    />\n\n                    <Card style={{ width: \"100%\", height: '100px' }} className={`m-2 d-flex flex-row  ${this.state.drag ? \"border-primary\" : \"\"} ${this.state.validImgPath ? \"\" : \"border-danger\"}`}\n                        onClick={this.handlePick}\n                        onDragStart={(e) => {\n                            e.preventDefault();\n                            this.setState({ drag: true });\n                        }}\n                        onDragLeave={(e) => {\n                            e.preventDefault();\n                            this.setState({ drag: false });\n                        }}\n                        onDragOver={(e) => {\n                            e.preventDefault();\n                            this.setState({ drag: true });\n                        }}\n                        onDrop={(e) => this.onDropHandler(e)}\n                    >\n\n                        {this.state.gallery.length > 0 ? this.state.gallery.map((img) =>\n                            <Card\n                                key={img}\n                                style={{ width: \"100px\", height: \"100px\", position: \"relative\" }}\n                                onClick={\n                                    (e) => { e.stopPropagation() }\n                                }\n                            >\n                                <CloseButton style={{ position: 'absolute', top: 5, right: 10, fontSize: 32 }} className={'text-danger'}\n                                    onClick={\n                                        () => { this.galleryDelete(img) }\n                                    } />\n                                <img src={process.env.REACT_APP_API_URL + img} style={{ objectFit: 'cover', width: '100%', height: '100%' }} />\n                            </Card>\n                        ) :\n                            <span\n                                style={{\n                                    display: 'flex',\n                                    width: '100%',\n                                    alignItems: 'center',\n                                    justifyContent: 'center'\n                                }}\n                            >Перетяните нужные изображения в эту область</span>\n                        }\n                    </Card>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default CategoryForm\n","/home/kotoslav/projects/grob43/admin/src/components/PaginationPages.js",["109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":25},{"ruleId":"114","severity":1,"message":"118","line":8,"column":27,"nodeType":"116","messageId":"117","endLine":8,"endColumn":48},{"ruleId":"114","severity":1,"message":"119","line":11,"column":18,"nodeType":"116","messageId":"117","endLine":11,"endColumn":22},{"ruleId":"114","severity":1,"message":"120","line":12,"column":13,"nodeType":"116","messageId":"117","endLine":12,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":36,"column":8,"nodeType":"123","endLine":36,"endColumn":10,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":30,"column":8,"nodeType":"123","endLine":30,"endColumn":42,"suggestions":"126"},{"ruleId":"114","severity":1,"message":"127","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":78,"column":9,"nodeType":"130","messageId":"131","endLine":78,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":85,"column":9,"nodeType":"130","messageId":"131","endLine":85,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":120,"column":13,"nodeType":"130","messageId":"131","endLine":120,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":206,"column":117,"nodeType":"130","messageId":"131","endLine":206,"endColumn":127},{"ruleId":"132","severity":1,"message":"133","line":210,"column":81,"nodeType":"134","messageId":"135","endLine":210,"endColumn":83},{"ruleId":"136","severity":1,"message":"137","line":292,"column":37,"nodeType":"138","endLine":295,"endColumn":39},{"ruleId":"114","severity":1,"message":"127","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":59,"column":9,"nodeType":"130","messageId":"131","endLine":59,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":169,"column":33,"nodeType":"138","endLine":169,"endColumn":144},{"ruleId":"139","severity":1,"message":"140","line":7,"column":35,"nodeType":"141","messageId":"135","endLine":7,"endColumn":38},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'readAllCategory' is defined but never used.","Identifier","unusedVar","'itemReadAllByCategory' is defined but never used.","'item' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["145"],"'$host' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [user]",{"range":"150","text":"151"},"Update the dependencies array to be: [item, item.page, item.selectedCategory]",{"range":"152","text":"153"},[1085,1087],"[user]",[1069,1103],"[item, item.page, item.selectedCategory]"]